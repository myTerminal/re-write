"use strict";var _slicedToArray=function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,r){var e=[],i=!0,n=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(i=(u=a.next()).done)&&(e.push(u.value),!r||e.length!==r);i=!0);}catch(t){n=!0,o=t}finally{try{!i&&a.return&&a.return()}finally{if(n)throw o}}return e}(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")},fs=require("fs"),path=require("path"),io=require("./interface"),reWrite=require("./re-write"),defaultOutputFileName="output-file.txt",getFilesInDirectory=function r(e,i){var t=fs.readdirSync(e);return i=i||[],t.forEach(function(t){fs.statSync(path.join(e,t)).isDirectory()?i=r(path.join(e,t),i):i.push(path.join(e,t))}),i},inflateInput=function(t){return t.map(function(t){return fs.lstatSync(t).isDirectory()?getFilesInDirectory(t):[t]}).reduce(function(t,r){return t.concat(r)},[])};module.exports.getInputAndOutputItems=function(t,r){var e=void 0,i=void 0,n=r.slice(0).pop(),o=fs.existsSync(n)&&fs.statSync(n).isDirectory();(r.length<2&&io.showError("ARG_COUNT_LESS"),t===reWrite.doIt)?(e=inflateInput(r.slice(0,r.length-1)),i=o?path.join(n,defaultOutputFileName):n):(2<r.length&&io.showError("ARG_COUNT_MORE"),fs.existsSync(r[0])&&fs.statSync(r[0]).isFile()&&o||io.showError("UNDO_ARGS"),e=_slicedToArray(r,1)[0],i=n);return[e,i]};