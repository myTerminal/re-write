#!/usr/bin/env node
"use strict";var _slicedToArray=function(r,e){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return function(r,e){var t=[],n=!0,u=!1,i=void 0;try{for(var a,o=r[Symbol.iterator]();!(n=(a=o.next()).done)&&(t.push(a.value),!e||t.length!==e);n=!0);}catch(r){u=!0,i=r}finally{try{!n&&o.return&&o.return()}finally{if(u)throw i}}return t}(r,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")},helper=require("./helper"),reWrite=require("./re-write"),args=Array.from(process.argv),operation=args[1],parameters=args.slice(2),action=-1<operation.indexOf("undo")?reWrite.undoIt:reWrite.doIt,_helper$getInputAndOu=helper.getInputAndOutputItems(action,parameters),_helper$getInputAndOu2=_slicedToArray(_helper$getInputAndOu,2),input=_helper$getInputAndOu2[0],output=_helper$getInputAndOu2[1];action(input,output);